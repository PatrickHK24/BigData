-- January
CREATE TABLE january_jobs AS
    SELECT*
    FROM job_postings_fact
    WHERE EXTRACT(MONTH FROM job_posted_date) = 1;

-- February
CREATE TABLE february_jobs AS
    SELECT*
    FROM job_postings_fact
    WHERE EXTRACT(MONTH FROM job_posted_date) = 2;

-- March
CREATE TABLE march_jobs AS
    SELECT*
    FROM job_postings_fact
    WHERE EXTRACT(MONTH FROM job_posted_date) = 3;


CREATE TABLE data_science_jobs (
    job_id INT PRIMARY KEY,
    job_title TEXT,
    company_name TEXT,
    post_date DATE
);




SELECT
    company_table.company_id,
    company_dim.name,
    company_size,
    num_jobs
FROM company_dim INNER JOIN (
    SELECT
        job_postings_fact.company_id,
        COUNT (job_id) AS num_jobs,
    CASE
        WHEN COUNT (job_id) < 10 THEN 'Small Company'
        WHEN COUNT (job_id) BETWEEN 10 AND 50 THEN 'Medium Company'
        ELSE 'Large Company'
    END AS company_size
    FROM
        job_postings_fact
    GROUP BY
        job_postings_fact.company_id
) AS company_table ON
company_table.company_id = company_dim.company_id
GROUP BY company_table.company_id, company_dim.name, company_size, num_jobs
ORDER BY company_table.company_id;

SELECT 
	company_id,
  name,
	-- Categorize companies
  CASE
	  WHEN job_count < 10 THEN 'Small'
    WHEN job_count BETWEEN 10 AND 50 THEN 'Medium'
    ELSE 'Large'
  END AS company_size

FROM 
-- Subquery to calculate number of job postings per company 
(
  SELECT 
		company_dim.company_id, 
		company_dim.name, 
		COUNT(job_postings_fact.job_id) as job_count
  FROM 
		company_dim
  INNER JOIN job_postings_fact ON company_dim.company_id = job_postings_fact.company_id
  GROUP BY 
		company_dim.company_id, 
		company_dim.name
) AS company_job_count;


SELECT*
FROM job_postings_fact
LIMIT 5



SELECT
    company_id,
    name,
    AVG(salary_year_avg) AS average_salary
FROM
    job_postings_fact
GROUP BY
    company_id,
    name
        job_postings_fact) AS average_salary



WITH country_rate_avg AS (
    SELECT
        job_country,
        AVG (salary_year_avg) AS country_average
    FROM
        job_postings_fact
    GROUP BY
        job_country
)
SELECT
    job_id,
    job_title,
    name,
    salary_year_avg,
    CASE
        WHEN salary_year_avg > country_rate_avg.country_average THEN 'Above Average'
        ELSE 'Below Average'
    END AS salary_comparison,
    EXTRACT (MONTH FROM job_posted_date) AS job_month
FROM
    job_postings_fact
INNER JOIN country_rate_avg ON country_rate_avg.job_country = job_postings_fact.job_country
INNER JOIN company_dim ON company_dim.company_id = job_postings_fact.company_id
ORDER BY
    job_month DESC


WITH unique_skills AS (
  SELECT  
    COUNT(DISTINCT skill_id) AS unique_skills_count,
    company_id
    FROM
        skills_job_dim
    LEFT JOIN job_postings_fact ON skills_job_dim.job_id = job_postings_fact.job_id
    GROUP BY
        company_id
)
,
company_salary AS (
  SELECT 
    company_id, 
    MAX(salary_year_avg) AS max_salary
  FROM job_postings_fact
  GROUP BY company_id
)
SELECT 
  company_dim.company_id,
  company_dim.name,
  unique_skills_count,
  company_salary.max_salary
FROM 
  company_dim
LEFT JOIN unique_skills ON company_dim.company_id = unique_skills.company_id
LEFT JOIN company_salary ON company_dim.company_id = company_salary.company_id

SELECT*
FROM job_postings_fact
LIMIT 5
